"""add_archived_fields_to_email_connections

Revision ID: 79adcfdc5037
Revises: 2025083021_add_email_connections
Create Date: 2025-08-30 22:48:05.824953

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '79adcfdc5037'
down_revision: Union[str, Sequence[str], None] = '2025083021_add_email_connections'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gallery_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gallery_id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['gallery_id'], ['galleries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gallery_id', 'image_id', name='uq_gallery_images_gallery_image')
    )
    op.create_index('ix_gallery_images_gallery_sort', 'gallery_images', ['gallery_id', 'sort_order'], unique=False)
    op.create_index('ix_gallery_images_image_id', 'gallery_images', ['image_id'], unique=False)
    op.drop_index(op.f('ix_email_connections_email_address'), table_name='email_connections')
    op.drop_index(op.f('ix_email_connections_id'), table_name='email_connections')
    op.drop_index(op.f('ix_email_connections_provider'), table_name='email_connections')
    op.drop_index(op.f('ix_email_connections_provider_account_id'), table_name='email_connections')
    op.drop_index(op.f('ix_email_connections_status'), table_name='email_connections')
    op.drop_index(op.f('ix_email_connections_user_email'), table_name='email_connections')
    op.drop_index(op.f('ix_email_connections_user_id'), table_name='email_connections')
    op.drop_table('email_connections')
    op.add_column('galleries', sa.Column('title', sa.String(), nullable=False))
    op.add_column('galleries', sa.Column('slug', sa.String(), nullable=True))
    op.add_column('galleries', sa.Column('date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('galleries', sa.Column('thumbnail_image_id', sa.Integer(), nullable=True))
    op.add_column('galleries', sa.Column('user_profile_id', sa.Integer(), nullable=False))
    op.alter_column('galleries', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index('ix_galleries_created_at', 'galleries', ['created_at'], unique=False)
    op.create_index(op.f('ix_galleries_date'), 'galleries', ['date'], unique=False)
    op.create_index(op.f('ix_galleries_is_public'), 'galleries', ['is_public'], unique=False)
    op.create_index('ix_galleries_public_slug', 'galleries', ['is_public', 'slug'], unique=False)
    op.create_index(op.f('ix_galleries_slug'), 'galleries', ['slug'], unique=True)
    op.create_index(op.f('ix_galleries_title'), 'galleries', ['title'], unique=False)
    op.create_index('ix_galleries_user_profile_id', 'galleries', ['user_profile_id'], unique=False)
    op.drop_constraint(op.f('galleries_user_id_fkey'), 'galleries', type_='foreignkey')
    op.create_foreign_key(None, 'galleries', 'images', ['thumbnail_image_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'galleries', 'user_profiles', ['user_profile_id'], ['id'], ondelete='CASCADE')
    op.drop_column('galleries', 'user_id')
    op.drop_column('galleries', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('galleries', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('galleries', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'galleries', type_='foreignkey')
    op.drop_constraint(None, 'galleries', type_='foreignkey')
    op.create_foreign_key(op.f('galleries_user_id_fkey'), 'galleries', 'users', ['user_id'], ['id'])
    op.drop_index('ix_galleries_user_profile_id', table_name='galleries')
    op.drop_index(op.f('ix_galleries_title'), table_name='galleries')
    op.drop_index(op.f('ix_galleries_slug'), table_name='galleries')
    op.drop_index('ix_galleries_public_slug', table_name='galleries')
    op.drop_index(op.f('ix_galleries_is_public'), table_name='galleries')
    op.drop_index(op.f('ix_galleries_date'), table_name='galleries')
    op.drop_index('ix_galleries_created_at', table_name='galleries')
    op.alter_column('galleries', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('galleries', 'user_profile_id')
    op.drop_column('galleries', 'thumbnail_image_id')
    op.drop_column('galleries', 'date')
    op.drop_column('galleries', 'slug')
    op.drop_column('galleries', 'title')
    op.create_table('email_connections',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), server_default=sa.text("'google'::character varying"), autoincrement=False, nullable=False),
    sa.Column('provider_account_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('connection_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('access_token_encrypted', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('refresh_token_encrypted', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token_expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('scopes_granted', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('connection_status', sa.VARCHAR(), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=False),
    sa.Column('last_sync_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('oauth_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('email_connections_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('email_connections_pkey'))
    )
    op.create_index(op.f('ix_email_connections_user_id'), 'email_connections', ['user_id'], unique=False)
    op.create_index(op.f('ix_email_connections_user_email'), 'email_connections', ['user_id', 'email_address'], unique=False)
    op.create_index(op.f('ix_email_connections_status'), 'email_connections', ['user_id', 'connection_status'], unique=False)
    op.create_index(op.f('ix_email_connections_provider_account_id'), 'email_connections', ['provider_account_id'], unique=False)
    op.create_index(op.f('ix_email_connections_provider'), 'email_connections', ['user_id', 'provider'], unique=False)
    op.create_index(op.f('ix_email_connections_id'), 'email_connections', ['id'], unique=False)
    op.create_index(op.f('ix_email_connections_email_address'), 'email_connections', ['email_address'], unique=False)
    op.drop_index('ix_gallery_images_image_id', table_name='gallery_images')
    op.drop_index('ix_gallery_images_gallery_sort', table_name='gallery_images')
    op.drop_table('gallery_images')
    # ### end Alembic commands ###
