"""enhance user profile with marriages and addresses

Revision ID: e31070a73e61
Revises: a579e8a1
Create Date: 2025-08-31 01:57:28.729285

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e31070a73e61'
down_revision: Union[str, Sequence[str], None] = 'a579e8a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marriages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('spouse_id', sa.Integer(), nullable=False),
    sa.Column('marriage_date', sa.Date(), nullable=False),
    sa.Column('marriage_location', sa.JSON(), nullable=True),
    sa.Column('separation_date', sa.Date(), nullable=True),
    sa.Column('divorce_date', sa.Date(), nullable=True),
    sa.Column('current_status', sa.String(length=50), nullable=False),
    sa.Column('marriage_certificate_file_id', sa.Integer(), nullable=True),
    sa.Column('divorce_decree_file_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['spouse_id'], ['people.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id', 'spouse_id', 'marriage_date', name='unique_marriage')
    )
    op.create_index(op.f('ix_marriages_id'), 'marriages', ['id'], unique=False)
    op.create_index('ix_marriages_person_id', 'marriages', ['person_id'], unique=False)
    op.create_index('ix_marriages_spouse_id', 'marriages', ['spouse_id'], unique=False)
    op.create_index('ix_marriages_timeline', 'marriages', ['marriage_date', 'separation_date', 'divorce_date'], unique=False)
    op.create_table('person_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('street_address', sa.String(length=500), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('effective_start_date', sa.Date(), nullable=False),
    sa.Column('effective_end_date', sa.Date(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('address_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_person_addresses_id'), 'person_addresses', ['id'], unique=False)
    op.create_table('marriage_children',
    sa.Column('marriage_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('custody_status', sa.String(length=50), nullable=False),
    sa.Column('custody_details', sa.Text(), nullable=True),
    sa.Column('current_living_with', sa.String(length=20), nullable=False),
    sa.Column('custody_arrangement_file_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['people.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['marriage_id'], ['marriages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('marriage_id', 'child_id')
    )
    op.create_index('ix_marriage_children_child_id', 'marriage_children', ['child_id'], unique=False)
    op.create_index('ix_marriage_children_marriage_id', 'marriage_children', ['marriage_id'], unique=False)
    op.drop_constraint(op.f('cases_court_file_number_key'), 'cases', type_='unique')
    op.create_index(op.f('ix_cases_court_file_number'), 'cases', ['court_file_number'], unique=True)
    op.add_column('people', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('people', sa.Column('gender', sa.String(length=50), nullable=True))
    op.add_column('person_profiles', sa.Column('ssn_last_four', sa.String(length=4), nullable=True))
    op.add_column('person_profiles', sa.Column('preferred_name', sa.String(length=100), nullable=True))
    op.add_column('person_profiles', sa.Column('emergency_contact', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('person_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'user_profiles', 'people', ['person_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_profiles', type_='foreignkey')
    op.drop_column('user_profiles', 'person_id')
    op.drop_column('person_profiles', 'emergency_contact')
    op.drop_column('person_profiles', 'preferred_name')
    op.drop_column('person_profiles', 'ssn_last_four')
    op.drop_column('people', 'gender')
    op.drop_column('people', 'date_of_birth')
    op.drop_index(op.f('ix_cases_court_file_number'), table_name='cases')
    op.create_unique_constraint(op.f('cases_court_file_number_key'), 'cases', ['court_file_number'], postgresql_nulls_not_distinct=False)
    op.drop_index('ix_marriage_children_marriage_id', table_name='marriage_children')
    op.drop_index('ix_marriage_children_child_id', table_name='marriage_children')
    op.drop_table('marriage_children')
    op.drop_index(op.f('ix_person_addresses_id'), table_name='person_addresses')
    op.drop_table('person_addresses')
    op.drop_index('ix_marriages_timeline', table_name='marriages')
    op.drop_index('ix_marriages_spouse_id', table_name='marriages')
    op.drop_index('ix_marriages_person_id', table_name='marriages')
    op.drop_index(op.f('ix_marriages_id'), table_name='marriages')
    op.drop_table('marriages')
    # ### end Alembic commands ###
