[project]
name = "litigation-support-backend"
version = "1.0.0"
description = "Professional litigation support application backend"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # FastAPI and web framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    # Database
    "sqlalchemy[asyncio]>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic>=1.13.0",
    # Authentication and security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "google-auth>=2.25.2",
    "google-auth-oauthlib>=1.1.0",
    "google-api-python-client>=2.111.0",
    # Task queue
    "celery[redis]>=5.3.4",
    "redis>=5.0.1",
    # Storage and file processing
    "aioboto3>=12.0.0",
    "aiofiles>=23.2.1",
    "pypdf2>=3.0.1",
    "pillow>=10.1.0",
    "pdf2image>=1.16.3",
    "python-magic>=0.4.27",
    # Email processing
    "email-validator>=2.1.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "httpx>=0.25.2",
    "structlog>=23.2.0",
    "watchdog>=3.0.0", # File system monitoring
    "websockets>=12.0", # WebSocket support
    "google-auth-httplib2>=0.2.0",
    "email-reply-parser>=0.5.12",
    "pymupdf>=1.26.4",
    "pdfplumber>=0.11.7",
    "reportlab>=4.4.3",
    "python-docx>=1.2.0",
    "openpyxl>=3.1.5",
    "unstructured>=0.18.14",
    "pytesseract>=0.3.13",
    "docxtpl>=0.20.1",
    "html2text>=2025.4.15",
    "weasyprint>=66.0",
    "psycopg2-binary>=2.9.10",
    "dropbox>=12.0.2",
    "mailjet-rest>=1.5.1",
    "apscheduler>=3.11.0",
    # Vector database
    "weaviate-client>=4.0.0",
    "numpy>=1.24.0",
    "sentence-transformers>=5.1.0",
    # API-based embeddings
    "openai>=1.0.0",
    "cohere>=4.0.0",
    "tiktoken>=0.5.0",  # For OpenAI tokenization
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.2",
    "moto>=4.2.14",  # AWS mocking
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=backend",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"
